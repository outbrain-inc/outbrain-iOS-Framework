# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

references:

  # Docker image configurations

  ios_config: &ios_config
    working_directory: ~/repo
    macos:
      xcode: "10.1.0"

  # Export environment variables
  export_previous_release_version: &export_previous_release_version
    run:
      name: Export previous version number to environment variable
      command: echo "export PREVIOUS_SDK_VERSION=`cat Outbrain.m | grep "OB_SDK_VERSION" | cut -d "=" -f2 | cut -d \" -f2`" >> $BASH_ENV
      working_directory: SDK-sources/OutbrainSDK/

  export_release_version: &export_release_version
    run:
      name: Export new version number to environment variable
      command: echo "export RELEASE_VERSION=$(cut -d '/' -f2 <<< $CIRCLE_BRANCH)" >> $BASH_ENV

  export_framework_artifact_path: &export_framework_artifact_path
    run:
      name: Export framework artifacr path
      command: echo "export FRAMEWORK_ARTIFACT_PATH=Samples/OutbrainDemo/OutbrainSDK.framework" >> $BASH_ENV

jobs:
  ios_default:
    <<: *ios_config
    steps:
      - checkout

      - run:
          name: Clean previous OutbrainSDK.framework
          command: |
            if [ -d OutbrainSDK.framework ]; then
              rm -fr OutbrainSDK.framework
            fi
          working_directory: Samples/OutbrainDemo
            
      - run:
          name: Cleaing the SDK project - OBFramework
          command: xcodebuild clean -target OBFramework
          working_directory: SDK-sources

      - run:
          name: Cleaing the SDK project - OutbrainSDK
          command: xcodebuild clean -target OutbrainSDK
          working_directory: SDK-sources

      - run:
          name: Building the SDK project
          command: xcodebuild -target OBFramework -UseModernBuildSystem=NO
          working_directory: SDK-sources

      - run:
          name: Check if framework is where we think it is
          command: |
            if [ ! -d "OutbrainSDK.framework" ]; then
              echo "framework is NOT where we think it is"
              exit 1
            fi
          working_directory: Samples/OutbrainDemo/

      - run:
          name: Build Sample Apps - Journal
          command: |
            xcodebuild \
            -project OutbrainDemo.xcodeproj \
            -scheme Journal \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 6' \
            build
          working_directory: Samples/OutbrainDemo
      
      - run:
          name: Build Sample Apps - SmartFeed
          command: |
            xcodebuild \
            -project OutbrainDemo.xcodeproj \
            -scheme SmartFeed \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 6' \
            build
          working_directory: Samples/OutbrainDemo

      - run:
          name: Run SDK tests
          command: |
            xcodebuild \
            -project OutbrainSDK.xcodeproj \
            -scheme OutbrainSDK \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 6' \
            test
          working_directory: SDK-sources

  ios_release:
    <<: *ios_config
    steps:
      - checkout

      # Add ssh key fingerprint to tell circleci to use the key we've added in the console settings.
      - add_ssh_keys:
          fingerprints:
            - "fa:6e:50:44:11:39:30:06:6c:e2:3a:cd:ca:3c:1b:2f"

      - *export_previous_release_version

      - *export_release_version

      - run:
          name: Updating SDK version
          command: bash -x ./bump_sdk_version.sh

      - run:
        name: Clean previous OutbrainSDK.framework
        command: |
          if [ -d OutbrainSDK.framework ]; then
            rm -fr OutbrainSDK.framework
          fi
        working_directory: Samples/OutbrainDemo
          
    - run:
        name: Cleaing the SDK project - OBFramework
        command: xcodebuild clean -target OBFramework
        working_directory: SDK-sources

    - run:
        name: Cleaing the SDK project - OutbrainSDK
        command: xcodebuild clean -target OutbrainSDK
        working_directory: SDK-sources

    - run:
        name: Building the SDK project
        command: xcodebuild -target OBFramework -UseModernBuildSystem=NO
        working_directory: SDK-sources

    - run:
        name: Check if framework is where we think it is
        command: |
          if [ ! -d "OutbrainSDK.framework" ]; then
            echo "framework is NOT where we think it is"
            exit 1
          fi
        working_directory: Samples/OutbrainDemo/

      - run:
          name: Creating OBSDK-Release dir
          command: |
            mkdir OBSDK-Release
            mkdir OBSDK-Release/SDK/
            mkdir OBSDK-Release/Samples/

      - run:
          name: Copy the OutbrainSDK.framework and sample apps into OBSDK-Release
          command: |
            cp -a Samples/OutbrainDemo/OutbrainSDK.framework OBSDK-Release/SDK/
            cp -fa Samples/ OBSDK-Release/Samples/
            cp -rf README.md OBSDK-Release/

      - run:
          name: Prepare iOS-SampleApps.zip and OutbrainSDK.framework.zip
          command: |
            zip --symlinks -r iOS-SampleApps.zip . -x ".*" -x "*/.*" > /dev/null
            cd SDK/OutbrainSDK.framework
            zip --symlinks -r ../../OutbrainSDK.framework.zip *
          working_directory: OBSDK-Release

      - run:
          name: Upload OutbrainSDK.framework.zip to Bintray
          command: bash -x ./upload_to_bintray.sh OBSDK-Release/OutbrainSDK.framework.zip iOS-SDK $RELEASE_VERSION OutbrainSDK.framework.zip

      - run:
          name: Upload iOS-SampleApps.zip to Bintray
          command: bash -x ./upload_to_bintray.sh OBSDK-Release/iOS-SampleApps.zip iOS-SampleApps $RELEASE_VERSION iOS-SampleApps.zip

      - run:
          name: Upload Custom UI
          command: bash -x ./update_custom_ui.sh $RELEASE_VERSION

workflows:
  version: 2
  workflow:
    jobs:
      - ios_default
      - ios_release:
          requires:
            - ios_default
          filters:
            branches:
              only:
                - /^release/.*/
